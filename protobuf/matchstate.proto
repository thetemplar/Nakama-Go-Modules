syntax = "proto3";
package main;
option csharp_namespace = "NakamaMinimalGame.PublicMatchState";

message PublicMatchState {
	int64 tick = 1;
	//repeated int64 stopwatch = 2;
	repeated CombatLogEntry combatlog = 2;
	map<string, Interactable> interactable = 3;
	map<string, Projectile> projectile = 4;
	map<string, Area> area = 5;
  
	//https://wow.gamepedia.com/COMBAT_LOG_EVENT_UNFILTERED
	message CombatLogEntry {
		int64 timestamp = 1;
		string source_id = 2;
		string destination_id = 3;

		CombatLogEntry_Source source = 4;
		enum CombatLogEntry_Source {
			Autoattack = 0;
			Range = 1;
			Spell = 2;
			Periodic = 3;
			AoE = 4;
			Environment = 5;
		}
		oneof source_spell_effect_id {
			int64 source_spell_id = 6;
			int64 source_effect_id = 7;
		}

		oneof type {
			CombatLogEntry_Damage damage = 8;
			CombatLogEntry_Missed missed_type = 9;
			CombatLogEntry_Heal heal = 10;
			CombatLogEntry_Interrupted interrupted = 11;
			CombatLogEntry_Aura aura = 12;
			CombatLogEntry_Area area = 13;
			CombatLogEntry_Cast cast = 14;
			string system_message = 15;
		}

		message CombatLogEntry_Damage {
			float amount = 1;
			float resisted = 2;
			float blocked = 3;
			float absorbed = 4;
			float critical = 5;
			float overkill = 6;
		}
		enum CombatLogEntry_Missed {
			Missed = 0;
			Dodged = 1;
			Parried = 2;
		}
		message CombatLogEntry_Heal {
			float amount = 1;
			float absorbed = 2;
			float critical = 3;
			float overheal = 4;
		}
		message CombatLogEntry_Interrupted {
			int64 interrupted_spell_id = 1;
		}
		message CombatLogEntry_Aura {
			CombatLogEntry_Aura_Event event = 1;
			enum CombatLogEntry_Aura_Event {
				Applied = 0;
				Removed = 1;
				Refreshed = 2;
				Depleted = 3;
			}
		}
		message CombatLogEntry_Area {
			CombatLogEntry_Area_Event event = 1;
			enum CombatLogEntry_Area_Event {
				Created = 0;
				Depleted = 1;
			}
		}
		message CombatLogEntry_Autoattack {
			CombatLogEntry_Autoattack event = 1;
			enum CombatLogEntry_Autoattack {
				Start = 0;
				Success = 1;
				Failed = 2;
			}
			string failed_message = 2;
		}
		message CombatLogEntry_Cast {
			CombatLogEntry_Aura_Event event = 1;
			enum CombatLogEntry_Aura_Event {
				Start = 0;
				Success = 1;
				Failed = 2;
			}
			string failed_message = 2;
		}
		message CombatLogEntry_SystemMessage {
			string message = 1;
		}
	}

	message Interactable {
		enum Type {
			Player = 0;
			NPC = 1;
		}
		//system
		string id = 1;
		Type type = 2;
		int64 character_id = 3;
		int64 last_processed_client_tick = 4;

		//info
		string classname = 5;
		int32 level = 6;

		//stats
		float current_health = 7;
		float current_power = 8;

		//vitalities
		bool invulnerable = 9;
		
		//pos
		Vector2Df position = 10;
		float rotation = 11;

		//combat
		float global_cooldown = 12;
		string target = 13;

		//auras
		repeated Aura auras = 14;

		//combat
		bool is_engaged = 15;
		int32 team = 16;

	}

	message Aura {
		int64 created_at_tick = 1;
		string creator = 2;
		int64 effect_id = 3;
		int32 aura_tick_count = 4;
	}

	message Projectile {
		//system
		string id = 1;
		int64 spell_id = 2;
		int64 created_at_tick = 3;
		string creator = 4;

		Vector2Df position = 5;
		float rotation = 6;
		string target = 7;

		float speed = 8;
	}

	message Area {
		string id = 1;
		int64 effect_id = 2;
		int64 created_at_tick = 3;
		string creator = 4;

		Vector2Df position = 5;
		int32 area_tick_count = 6;
	}
}


//Send by client

//opId = 0
message Client_Message {
	int64 client_tick = 1;
	oneof type {
		Client_Character character = 2;
		Client_Cast cast = 3;
		Client_Autoattack auto_attack = 4;
		Client_CancelAttack cancel_attack = 5;
		Client_Movement move = 6;
		Client_SelectCharacter select_char = 7;
	}

	message Client_Character {
		int64 last_confirmed_server_tick = 2;
		string target = 3;
	}

	message Client_Cast {
		int64 client_tick = 1;
		int64 spell_id = 2;
		Vector2Df position = 3;
	}

	message Client_Autoattack {
		int64 client_tick = 2;
		enum Type {
			Meele = 0;
			Range = 1;
			Wand = 2;
		}
		Type attacktype = 3;
	}

	message Client_CancelAttack {
	}

	message Client_Movement{
		int64 client_tick = 1;
		bool absolute_coordinates = 2;
		float x_axis = 3;
		float y_axis = 4;
		float rotation = 5;
	}

	message Client_SelectCharacter {
		string classname = 1;
	}

}
		
message Vector2Df {
	float x = 1;
	float y = 2;
}