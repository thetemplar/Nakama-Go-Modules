syntax = "proto3";
package main;
option csharp_namespace = "NakamaMinimalGame.PublicMatchState";
import "character.proto";

message PublicMatchState {
	int64 tick = 1;
	//repeated int64 stopwatch = 2;
	repeated CombatLogEntry combatlog = 2;
	map<string, Interactable> interactable = 3;
	map<string, Projectile> projectile = 4;
  
	//https://wow.gamepedia.com/COMBAT_LOG_EVENT_UNFILTERED
	message CombatLogEntry {
		int64 timestamp = 1;
		string source_id = 2;
		string destination_id = 3;

		CombatLogEntry_Source source = 4;
		enum CombatLogEntry_Source {
			Autoattack = 0;
			Range = 1;
			Spell = 2;
			Periodic = 3;
			Environment = 4;
		}
		oneof source_spell_effect_id {
			int64 source_spell_id = 5;
			int64 source_effect_id = 6;
		}

		oneof type {
			CombatLogEntry_Damage damage = 7;
			CombatLogEntry_Missed missed_type = 8;
			CombatLogEntry_Interrupted interrupted = 9;
			CombatLogEntry_Aura aura = 10;
			CombatLogEntry_Cast cast = 11;
			string system_message = 12;
		}

		message CombatLogEntry_Damage {
			float amount = 1;
			float resisted = 2;
			float blocked = 3;
			float absorbed = 4;
			float critical = 5;
			float overkill = 6;
		}
		enum CombatLogEntry_Missed {
			Missed = 0;
			Dodged = 1;
			Parried = 2;
		}
		message CombatLogEntry_Heal {
			float amount = 1;
			float absorbed = 2;
			float critical = 3;
			float overheal = 4;
		}
		message CombatLogEntry_Interrupted {
			int64 interrupted_spell_id = 1;
		}
		message CombatLogEntry_Aura {
			CombatLogEntry_Aura_Event event = 1;
			enum CombatLogEntry_Aura_Event {
				Applied = 0;
				Removed = 1;
				Refreshed = 2;
				Depleted = 3;
			}
		}
		message CombatLogEntry_Autoattack {
			CombatLogEntry_Autoattack event = 1;
			enum CombatLogEntry_Autoattack {
				Start = 0;
				Success = 1;
				Failed = 2;
			}
			string failed_message = 2;
		}
		message CombatLogEntry_Cast {
			CombatLogEntry_Aura_Event event = 1;
			enum CombatLogEntry_Aura_Event {
				Start = 0;
				Success = 1;
				Failed = 2;
			}
			string failed_message = 2;
		}
		message CombatLogEntry_SystemMessage {
			string message = 1;
		}
	}

	message Interactable {
		enum Type {
			Player = 0;
			NPC = 1;
		}
		//system
		string id = 1;
		Type type = 2;
		int64 character_id = 3;
		int64 last_processed_client_tick = 4;

		//vitalities
		bool invulnerable = 5;
		Character character = 6;
		
		//pos
		Vector2Df position = 7;
		float rotation = 8;

		//combat
		float global_cooldown = 9;
		string target = 10;

		//auras
		repeated Aura auras = 11;
	}

	message Aura {
		int64 created_at_tick = 1;
		string creator = 2;
		int64 effect_id = 3;
		int32 aura_tick_count = 4;
	}

	message Projectile {
		//system
		string id = 1;
		int64 spell_id = 2;
		int64 created_at_tick = 3;
		string creator = 4;

		Vector2Df position = 5;
		float rotation = 6;
		string target = 7;

		float speed = 8;
	}
		
	message Vector2Df {
		float x = 1;
		float y = 2;
	}
}


//Send by client

//opId = 0
message Client_Character {
	int64 last_confirmed_server_tick = 1;
	int64 client_tick = 2;
	float x_axis = 3;
	float y_axis = 4;
	float rotation = 5;
	string target = 6;
}

//opId = 1
message Client_Cast {
	int64 spell_id = 1;
}

//opId = 2
message Client_Autoattack {
	enum Type {
		Meele = 0;
		Range = 1;
		Wand = 2;
	}
	Type attacktype = 1;
}

//opId = 3
message Client_CancelAttack {
}

//opId = 100
message Client_SelectCharacter {
	string classname = 1;
}
